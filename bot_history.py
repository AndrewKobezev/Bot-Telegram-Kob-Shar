import os
from dotenv import load_dotenv
import telebot
from telebot import types

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞
load_dotenv()
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
if not TOKEN:
    raise ValueError("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Ñ–∞–π–ª .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–∫–µ–Ω.")

bot = telebot.TeleBot(TOKEN)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
user_states = {}
user_inventory = {}

STATES = {
    "start": "start",
    "choose_entry_point": "choose_entry_point",
    "office_zone": "office_zone",
    "underground": "underground",
    "roof": "roof",
    "inside_building": "inside_building",
    "server_room_choice": "server_room_choice",
    "final_corona": "final_corona",
    "end_game": "end_game"
}

ITEMS = [
    "–ü–ª–∞–Ω—à–µ—Ç",
    "–ì–∞–∑–æ–≤–∞—è –∫–∞–ø—Å—É–ª–∞",
    "–ú–∞—Å–∫–∏—Ä–æ–≤–æ—á–Ω—ã–π –∫–æ—Å—Ç—é–º M3",
    "–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–ª–æ–Ω–µ—Ä",
    "–î—Ä–æ–Ω-–ø—Ä–∏–º–∞–Ω–∫–∞",
]

def get_keyboard(options):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    for option in options:
        markup.add(types.KeyboardButton(option))
    return markup

@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    user_states[user_id] = STATES["start"]
    user_inventory[user_id] = ITEMS.copy()

    welcome_text = (
        "üëÅÔ∏è –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –ê–≥–µ–Ω—Ç –ù–æ–ª—å.\n\n"
        "–¢–≤–æ—è –º–∏—Å—Å–∏—è ‚Äî —É—Å—Ç—Ä–∞–Ω–∏—Ç—å –∏–ª–∏ –æ–±–µ–∑–≤—Ä–µ–¥–∏—Ç—å –æ–±—ä–µ–∫—Ç –ø–æ –∏–º–µ–Ω–∏ \"–ö–æ—Ä–æ–Ω–∞\". "
        "–û–Ω —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –±–∞—à–Ω–µ \"–≠—Ç–µ—Ä–Ω–∏—Å\".\n\n"
        "–£ —Ç–µ–±—è –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–ª–µ–¥—É—é—â–∏–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º:\n"
        "- –ü–ª–∞–Ω—à–µ—Ç\n- –ì–∞–∑–æ–≤–∞—è –∫–∞–ø—Å—É–ª–∞\n- –ú–∞—Å–∫–∏—Ä–æ–≤–æ—á–Ω—ã–π –∫–æ—Å—Ç—é–º M3\n"
        "- –ì–æ–ª–æ—Å–æ–≤–æ–π –∫–ª–æ–Ω–µ—Ä\n- –î—Ä–æ–Ω-–ø—Ä–∏–º–∞–Ω–∫–∞\n\n"
        "üîç –í—ã–±–µ—Ä–∏ –ø—É—Ç—å –ø—Ä–æ–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è:"
    )

    keyboard = get_keyboard(["–ß–µ—Ä–µ–∑ –æ—Ñ–∏—Å–Ω—É—é –∑–æ–Ω—É", "–ß–µ—Ä–µ–∑ –ø–æ–¥–∑–µ–º–Ω—ã–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏", "–° –∫—Ä—ã—à–∏"])
    bot.send_message(message.chat.id, welcome_text, reply_markup=keyboard)

@bot.message_handler(func=lambda message: True)
def handle_all_messages(message):
    user_id = message.from_user.id
    state = user_states.get(user_id, STATES["start"])

    if message.text == "/start":
        start(message)
        return

    if state == STATES["start"]:
        handle_entry_point(message)
    elif state == STATES["office_zone"]:
        handle_office_zone(message)
    elif state == STATES["underground"]:
        handle_underground(message)
    elif state == STATES["roof"]:
        handle_roof(message)
    elif state == STATES["inside_building"]:
        handle_inside_building(message)
    elif state == STATES["server_room_choice"]:
        handle_server_room(message)
    elif state == STATES["final_corona"]:
        handle_final_choice(message)
    else:
        bot.send_message(message.chat.id, "ü§ñ –Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª. –ù–∞–ø–∏—à–∏ /start –¥–ª—è –Ω–∞—á–∞–ª–∞.")

def handle_entry_point(message):
    user_id = message.from_user.id
    choice = message.text

    if choice == "–ß–µ—Ä–µ–∑ –æ—Ñ–∏—Å–Ω—É—é –∑–æ–Ω—É":
        user_states[user_id] = STATES["office_zone"]
        text = "ü™™ –ù–∞ —Ç–µ–±–µ –º–∞—Å–∫–∏—Ä–æ–≤–æ—á–Ω—ã–π –∫–æ—Å—Ç—é–º. –û—Ö—Ä–∞–Ω–Ω–∏–∫ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç—ã. –ß—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å?"
        keyboard = get_keyboard([
            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–ª–∞–Ω—à–µ—Ç –¥–ª—è —Ñ–∞–ª—å—à–∏–≤—ã—Ö –ø—Ä–∞–≤",
            "–í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–ª–æ–Ω–µ—Ä–æ–º",
            "–û—Ç–≤–ª–µ—á—å –≤–Ω–∏–º–∞–Ω–∏–µ –¥—Ä–æ–Ω–æ–º-–ø—Ä–∏–º–∞–Ω–∫–æ–π",
            "–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ"
        ])
    elif choice == "–ß–µ—Ä–µ–∑ –ø–æ–¥–∑–µ–º–Ω—ã–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏":
        user_states[user_id] = STATES["underground"]
        text = "üï≥Ô∏è –¢—ã –Ω–∞—Ö–æ–¥–∏—à—å –∞–≤–∞—Ä–∏–π–Ω—É—é —à–∞—Ö—Ç—É. –†–µ—à—ë—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∞, –Ω–æ —Ç—ã –º–æ–∂–µ—à—å –µ—ë –≤—Å–∫—Ä—ã—Ç—å. –ß—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å?"
        keyboard = get_keyboard([
            "–í—Å–∫—Ä—ã—Ç—å —Ä–µ—à—ë—Ç–∫—É –∏ –ø—Ä–æ–Ω–∏–∫–Ω—É—Ç—å –≤–Ω—É—Ç—Ä—å",
            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –¥–∞—Ç—á–∏–∫–æ–≤",
            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–∞–∑, –µ—Å–ª–∏ —Ç–∞–º —Å—Ç–æ—Ä–æ–∂–µ–≤—ã–µ —Å–æ–±–∞–∫–∏",
            "–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ"
        ])
    elif choice == "–° –∫—Ä—ã—à–∏":
        user_states[user_id] = STATES["roof"]
        text = "ü¶Ö –¢—ã –Ω–∞ –∫—Ä—ã—à–µ. –ù–∏–∂–µ ‚Äî —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∞–Ω–≥–∞—Ä. –ö–∞–∫ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å?"
        keyboard = get_keyboard([
            "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫—Ä—ã—à—É —Å –ø–æ–º–æ—â—å—é –¥—Ä–æ–Ω–∞",
            "–í–∫–ª—é—á–∏—Ç—å –±–ª–æ–∫–∏—Ä–∞—Ç–æ—Ä —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏",
            "–°–ø—É—Å—Ç–∏—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É—é –Ω–∞ –≤–µ—Ä—ë–≤–∫–µ",
            "–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ"
        ])
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç.")
        return

    bot.send_message(message.chat.id, text, reply_markup=keyboard)

def handle_office_zone(message):
    user_id = message.from_user.id
    choice = message.text

    if choice == "–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ":
        user_states[user_id] = STATES["start"]
        start(message)
        return

    if choice in ["–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–ª–∞–Ω—à–µ—Ç –¥–ª—è —Ñ–∞–ª—å—à–∏–≤—ã—Ö –ø—Ä–∞–≤", "–í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–ª–æ–Ω–µ—Ä–æ–º", "–û—Ç–≤–ª–µ—á—å –≤–Ω–∏–º–∞–Ω–∏–µ –¥—Ä–æ–Ω–æ–º-–ø—Ä–∏–º–∞–Ω–∫–æ–π"]:
        bot.send_message(message.chat.id, "‚úÖ –¢—ã –≤–æ—à—ë–ª –≤ –∑–¥–∞–Ω–∏–µ.")
        user_states[user_id] = STATES["inside_building"]
        send_inside_building_options(message)
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.")

def handle_underground(message):
    user_id = message.from_user.id
    choice = message.text

    if choice == "–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ":
        user_states[user_id] = STATES["start"]
        start(message)
        return

    bot.send_message(message.chat.id, f"üîß –¢—ã –≤—ã–±—Ä–∞–ª: {choice}. –¢–µ–ø–µ—Ä—å —Ç—ã –≤–Ω—É—Ç—Ä–∏ –∑–¥–∞–Ω–∏—è.")
    user_states[user_id] = STATES["inside_building"]
    send_inside_building_options(message)

def handle_roof(message):
    user_id = message.from_user.id
    choice = message.text

    if choice == "–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ":
        user_states[user_id] = STATES["start"]
        start(message)
        return

    bot.send_message(message.chat.id, f"ü™Ç –¢—ã —Å–ø—É—Å–∫–∞–µ—à—å—Å—è –≤–Ω—É—Ç—Ä—å —á–µ—Ä–µ–∑ –∫—Ä—ã—à—É.")
    user_states[user_id] = STATES["inside_building"]
    send_inside_building_options(message)

def send_inside_building_options(message):
    keyboard = get_keyboard([
        "–ò–∑—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ –ø–ª–∞–Ω—à–µ—Ç–µ",
        "–ù–∞–π—Ç–∏ —Å–µ–∫—Ä–µ—Ç–∞—Ä—è –∏ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä–∞—Ñ–∏–∫–µ –ö–æ—Ä–æ–Ω—ã",
        "–ü—Ä–æ–Ω–∏–∫–Ω—É—Ç—å –≤ —Å–µ—Ä–≤–µ—Ä–Ω—É—é –∫–æ–º–Ω–∞—Ç—É",
        "–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É —ç—Ç–∞–∂—É –Ω–∞–ø—Ä—è–º—É—é"
    ])
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

def handle_inside_building(message):
    user_id = message.from_user.id
    choice = message.text

    if choice == "–ò–∑—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ –ø–ª–∞–Ω—à–µ—Ç–µ":
        bot.send_message(message.chat.id, "üìä –ù–∞ –ø–ª–∞–Ω—à–µ—Ç–µ –º–∞—Ä—à—Ä—É—Ç –ö–æ—Ä–æ–Ω—ã –∏ —Å–ª–∞–±—ã–µ –º–µ—Å—Ç–∞ –≤ –æ—Ö—Ä–∞–Ω–µ.")
    elif choice == "–ù–∞–π—Ç–∏ —Å–µ–∫—Ä–µ—Ç–∞—Ä—è –∏ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä–∞—Ñ–∏–∫–µ –ö–æ—Ä–æ–Ω—ã":
        bot.send_message(message.chat.id, "üìÑ –°–µ–∫—Ä–µ—Ç–∞—Ä—å —Ä–∞—Å—Å–∫–∞–∑–∞–ª: –ö–æ—Ä–æ–Ω–∞ –±—É–¥–µ—Ç –æ–¥–∏–Ω –≤ 14:00.")
    elif choice == "–ü—Ä–æ–Ω–∏–∫–Ω—É—Ç—å –≤ —Å–µ—Ä–≤–µ—Ä–Ω—É—é –∫–æ–º–Ω–∞—Ç—É":
        user_states[user_id] = STATES["server_room_choice"]
        bot.send_message(message.chat.id, "üîí –ö–æ–¥–æ–≤—ã–π –∑–∞–º–æ–∫ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π. –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≤–∑–ª–æ–º–∞—Ç—å?")
    elif choice == "–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É —ç—Ç–∞–∂—É –Ω–∞–ø—Ä—è–º—É—é":
        handle_final_dialog(message)
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.")

def handle_server_room(message):
    user_id = message.from_user.id
    choice = message.text.lower()

    if "–¥–∞" in choice or "–≤–∑–ª–æ–º" in choice:
        bot.send_message(message.chat.id, "üîì –í–∑–ª–æ–º —É–¥–∞–ª—Å—è. –¢—ã –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç—É–ø.")
    else:
        bot.send_message(message.chat.id, "üö™ –¢—ã –Ω–µ —Å—Ç–∞–ª —Ä–∏—Å–∫–æ–≤–∞—Ç—å. –í–æ–∑–≤—Ä–∞—â–∞–µ—à—å—Å—è.")

    handle_final_dialog(message)

def handle_final_dialog(message):
    user_id = message.from_user.id
    user_states[user_id] = STATES["final_corona"]

    bot.send_message(message.chat.id,
        "üë§ –¢—ã –≤—Å—Ç—Ä–µ—Ç–∏–ª –ö–æ—Ä–æ–Ω—É. –û–Ω –≥–æ–≤–æ—Ä–∏—Ç:\n\n"
        "¬´–Ø –Ω–µ –≤—Ä–∞–≥. –Ø –≤–Ω–µ–¥—Ä—ë–Ω–Ω—ã–π –∞–≥–µ–Ω—Ç. –ú–æ–∏ –¥–∞–Ω–Ω—ã–µ —Å–ø–∞—Å—É—Ç —Å—Ç—Ä–∞–Ω—É. –¢—ã –≥–æ—Ç–æ–≤ –º–Ω–µ –ø–æ–≤–µ—Ä–∏—Ç—å?¬ª",
        reply_markup=get_keyboard([
            "–£—Å—Ç—Ä–∞–Ω–∏—Ç—å –µ–≥–æ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ",
            "–í—ã—Å–ª—É—à–∞—Ç—å –µ–≥–æ",
            "–ó–∞–±—Ä–∞—Ç—å –µ–≥–æ —Å —Å–æ–±–æ–π",
            "–û—Å—Ç–∞–≤–∏—Ç—å –µ–≥–æ –≤ –ø–æ–∫–æ–µ"
        ])
    )

def handle_final_choice(message):
    user_id = message.from_user.id
    choice = message.text

    endings = {
        "–£—Å—Ç—Ä–∞–Ω–∏—Ç—å –µ–≥–æ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ": "üíÄ –¢—ã –≤—ã–ø–æ–ª–Ω–∏–ª –ø—Ä–∏–∫–∞–∑. –ù–æ —Ç–µ–ø–µ—Ä—å —Ç—ã ‚Äî —Å–ª–µ–¥—É—é—â–∞—è —Ü–µ–ª—å.",
        "–í—ã—Å–ª—É—à–∞—Ç—å –µ–≥–æ": "‚öñÔ∏è –û–Ω –±—ã–ª –Ω–∞—à–∏–º. –¢—ã –ø–æ–ª—É—á–∏–ª –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–µ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–µ.",
        "–ó–∞–±—Ä–∞—Ç—å –µ–≥–æ —Å —Å–æ–±–æ–π": "‚úÖ –û–Ω –≤—ã–∂–∏–ª. –¢—ã —Å—Ç–∞–ª –≥–µ—Ä–æ–µ–º.",
        "–û—Å—Ç–∞–≤–∏—Ç—å –µ–≥–æ –≤ –ø–æ–∫–æ–µ": "üîç –¢—ã —Ä–µ—à–∏–ª —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –≤—Å—ë —Å–∞–º. –í–ø–µ—Ä—ë–¥."
    }

    result = endings.get(choice)
    if result:
        bot.send_message(message.chat.id, result)
        bot.send_message(message.chat.id, "üîö –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ!",
                         reply_markup=types.ReplyKeyboardRemove())
        user_states[user_id] = STATES["end_game"]
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.")

# –ó–∞–ø—É—Å–∫
bot.polling(none_stop=True)
