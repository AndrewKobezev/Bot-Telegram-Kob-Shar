import telebot
from telebot import types  # –¢–µ–ø–µ—Ä—å –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç!

bot = telebot.TeleBot("YOUR_BOT_API_TOKEN_HERE")
# –•—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}  # {user_id: current_state}

# –í–æ–∑–º–æ–∂–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
STATES = {
    "start": "start",
    "choose_entry_point": "choose_entry_point",
    "office_zone": "office_zone",
    "underground": "underground",
    "roof": "roof",
    "inside_building": "inside_building",
    "server_room_choice": "server_room_choice",
    "final_corona": "final_corona",
    "end_game": "end_game"
}

# –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_inventory = {}  # {user_id: [items]}

# –ü—Ä–µ–¥–º–µ—Ç—ã
ITEMS = [
    "–ü–ª–∞–Ω—à–µ—Ç",
    "–ì–∞–∑–æ–≤–∞—è –∫–∞–ø—Å—É–ª–∞",
    "–ú–∞—Å–∫–∏—Ä–æ–≤–æ—á–Ω—ã–π –∫–æ—Å—Ç—é–º M3",
    "–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–ª–æ–Ω–µ—Ä",
    "–î—Ä–æ–Ω-–ø—Ä–∏–º–∞–Ω–∫–∞",
]

# –ö–Ω–æ–ø–∫–∏
def get_keyboard(options):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    for option in options:
        markup.add(telebot.types.KeyboardButton(option))
    return markup


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    user_states[user_id] = STATES["start"]
    user_inventory[user_id] = ITEMS.copy()  # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å

    welcome_text = (
        "üëÅÔ∏è –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –ê–≥–µ–Ω—Ç –ù–æ–ª—å.\n\n"
        "–¢–≤–æ—è –º–∏—Å—Å–∏—è ‚Äî —É—Å—Ç—Ä–∞–Ω–∏—Ç—å –∏–ª–∏ –æ–±–µ–∑–≤—Ä–µ–¥–∏—Ç—å –æ–±—ä–µ–∫—Ç –ø–æ –∏–º–µ–Ω–∏ \"–ö–æ—Ä–æ–Ω–∞\". –û–Ω —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –±–∞—à–Ω–µ \"–≠—Ç–µ—Ä–Ω–∏—Å\".\n\n"
        "–£ —Ç–µ–±—è –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–ª–µ–¥—É—é—â–∏–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º:\n"
        "- –ü–ª–∞–Ω—à–µ—Ç —Å –∫–∞—Ä—Ç–æ–π –∏ –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö\n"
        "- –ì–∞–∑–æ–≤–∞—è –∫–∞–ø—Å—É–ª–∞ (–ø–∞—Ä–∞–ª–∏–∑—É–µ—Ç –Ω–∞ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è)\n"
        "- –ú–∞—Å–∫–∏—Ä–æ–≤–æ—á–Ω—ã–π –∫–æ—Å—Ç—é–º M3\n"
        "- –ì–æ–ª–æ—Å–æ–≤–æ–π –∫–ª–æ–Ω–µ—Ä\n"
        "- –î—Ä–æ–Ω-–ø—Ä–∏–º–∞–Ω–∫–∞\n\n"
        "üîç –í—ã–±–µ—Ä–∏ –ø—É—Ç—å –ø—Ä–æ–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è:"
    )

    keyboard = get_keyboard(["–ß–µ—Ä–µ–∑ –æ—Ñ–∏—Å–Ω—É—é –∑–æ–Ω—É", "–ß–µ—Ä–µ–∑ –ø–æ–¥–∑–µ–º–Ω—ã–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏", "–° –∫—Ä—ã—à–∏"])
    bot.send_message(message.chat.id, welcome_text, reply_markup=keyboard)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–æ—á–∫–∏ –ø—Ä–æ–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è
@bot.message_handler(func=lambda message: user_states.get(message.from_user.id) == STATES["start"])
def choose_entry_point(message):
    user_id = message.from_user.id
    choice = message.text

    if choice not in ["–ß–µ—Ä–µ–∑ –æ—Ñ–∏—Å–Ω—É—é –∑–æ–Ω—É", "–ß–µ—Ä–µ–∑ –ø–æ–¥–∑–µ–º–Ω—ã–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏", "–° –∫—Ä—ã—à–∏"]:
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        return

    if choice == "–ß–µ—Ä–µ–∑ –æ—Ñ–∏—Å–Ω—É—é –∑–æ–Ω—É":
        user_states[user_id] = STATES["office_zone"]
        text = (
            "ü™™ –¢—ã –ø–æ–¥—Ö–æ–¥–∏—à—å –∫ –≥–ª–∞–≤–Ω–æ–º—É –≤—Ö–æ–¥—É. –ù–∞ —Ç–µ–±–µ –º–∞—Å–∫–∏—Ä–æ–≤–æ—á–Ω—ã–π –∫–æ—Å—Ç—é–º M3, –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥ —É–Ω–∏—Ñ–æ—Ä–º—É —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π —Å–ª—É–∂–±—ã.\n"
            "–û—Ö—Ä–∞–Ω–Ω–∏–∫ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç—ã. –ß—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å?"
        )
        buttons = [
            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–ª–∞–Ω—à–µ—Ç –¥–ª—è —Ñ–∞–ª—å—à–∏–≤—ã—Ö –ø—Ä–∞–≤",
            "–í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–ª–æ–Ω–µ—Ä–æ–º",
            "–û—Ç–≤–ª–µ—á—å –≤–Ω–∏–º–∞–Ω–∏–µ –¥—Ä–æ–Ω–æ–º-–ø—Ä–∏–º–∞–Ω–∫–æ–π",
            "–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ"
        ]

    elif choice == "–ß–µ—Ä–µ–∑ –ø–æ–¥–∑–µ–º–Ω—ã–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏":
        user_states[user_id] = STATES["underground"]
        text = (
            "üï≥Ô∏è –¢—ã –Ω–∞—Ö–æ–¥–∏—à—å –∞–≤–∞—Ä–∏–π–Ω—É—é —à–∞—Ö—Ç—É. –†–µ—à—ë—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∞, –Ω–æ —Ç—ã –º–æ–∂–µ—à—å –µ—ë –≤—Å–∫—Ä—ã—Ç—å. –í–Ω—É—Ç—Ä–∏ —Ç–µ–º–Ω–æ.\n"
            "–ß—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å?"
        )
        buttons = [
            "–í—Å–∫—Ä—ã—Ç—å —Ä–µ—à—ë—Ç–∫—É –∏ –ø—Ä–æ–Ω–∏–∫–Ω—É—Ç—å –≤–Ω—É—Ç—Ä—å",
            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –¥–∞—Ç—á–∏–∫–æ–≤",
            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–∞–∑, –µ—Å–ª–∏ —Ç–∞–º —Å—Ç–æ—Ä–æ–∂–µ–≤—ã–µ —Å–æ–±–∞–∫–∏",
            "–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ"
        ]

    elif choice == "–° –∫—Ä—ã—à–∏":
        user_states[user_id] = STATES["roof"]
        text = (
            "ü¶Ö –¢—ã –∑–∞–±–∏—Ä–∞–µ—à—å—Å—è –Ω–∞ –∫—Ä—ã—à—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –±–∞—à–Ω–∏. –í–Ω–∏–∑—É –≤–∏–¥–µ–Ω –≤–µ—Ä—Ç–æ–ª—ë—Ç–Ω—ã–π –∞–Ω–≥–∞—Ä –∏ —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞—Ç—á–∏–∫–∏.\n"
            "–ö–∞–∫ —Å–ø—É—Å—Ç–∏—Ç—å—Å—è?"
        )
        buttons = [
            "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫—Ä—ã—à—É —Å –ø–æ–º–æ—â—å—é –¥—Ä–æ–Ω–∞",
            "–í–∫–ª—é—á–∏—Ç—å –±–ª–æ–∫–∏—Ä–∞—Ç–æ—Ä —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏",
            "–°–ø—É—Å—Ç–∏—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É—é –Ω–∞ –≤–µ—Ä—ë–≤–∫–µ",
            "–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ"
        ]

    keyboard = get_keyboard(buttons)
    bot.send_message(message.chat.id, text, reply_markup=keyboard)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ñ–∏—Å–Ω–æ–π –∑–æ–Ω—ã
@bot.message_handler(func=lambda message: user_states.get(message.from_user.id) == STATES["office_zone"])
def office_zone_choice(message):
    user_id = message.from_user.id
    choice = message.text

    if choice == "–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ":
        user_states[user_id] = STATES["start"]
        start(message)
        return

    if choice == "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–ª–∞–Ω—à–µ—Ç –¥–ª—è —Ñ–∞–ª—å—à–∏–≤—ã—Ö –ø—Ä–∞–≤":
        bot.reply_to(message, "‚úÖ –¢—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à—ë–ª –≤–Ω—É—Ç—Ä—å. –¢–µ–ø–µ—Ä—å —Ç—ã –≤–Ω—É—Ç—Ä–∏ –∑–¥–∞–Ω–∏—è.")

    elif choice == "–í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–ª–æ–Ω–µ—Ä–æ–º":
        bot.reply_to(message, "‚úÖ –¢—ã –≤–æ—Å–ø—Ä–æ–∏–∑–≤—ë–ª –ø–∞—Ä–æ–ª—å –¥–Ω—è. –û—Ö—Ä–∞–Ω–Ω–∏–∫ –ø—Ä–æ–ø—É—Å—Ç–∏–ª —Ç–µ–±—è.")

    elif choice == "–û—Ç–≤–ª–µ—á—å –≤–Ω–∏–º–∞–Ω–∏–µ –¥—Ä–æ–Ω–æ–º-–ø—Ä–∏–º–∞–Ω–∫–æ–π":
        bot.reply_to(message, "‚úÖ –¢—ã –∑–∞–ø—É—Å—Ç–∏–ª –¥—Ä–æ–Ω. –û—Ö—Ä–∞–Ω–∞ –æ—Ç–≤–ª–µ—á–µ–Ω–∞. –¢—ã –ø—Ä–æ—à—ë–ª –≤–Ω—É—Ç—Ä—å.")

    else:
        bot.reply_to(message, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.")
        return

    buttons = [
        "–ò–∑—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ –ø–ª–∞–Ω—à–µ—Ç–µ",
        "–ù–∞–π—Ç–∏ —Å–µ–∫—Ä–µ—Ç–∞—Ä—è –∏ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä–∞—Ñ–∏–∫–µ –ö–æ—Ä–æ–Ω—ã",
        "–ü—Ä–æ–Ω–∏–∫–Ω—É—Ç—å –≤ —Å–µ—Ä–≤–µ—Ä–Ω—É—é –∫–æ–º–Ω–∞—Ç—É",
        "–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É —ç—Ç–∞–∂—É –Ω–∞–ø—Ä—è–º—É—é"
    ]
    keyboard = get_keyboard(buttons)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)
    user_states[user_id] = STATES["inside_building"]


# –í–Ω—É—Ç—Ä–∏ –∑–¥–∞–Ω–∏—è
@bot.message_handler(func=lambda message: user_states.get(message.from_user.id) == STATES["inside_building"])
def inside_building_choice(message):
    user_id = message.from_user.id
    choice = message.text

    if choice == "–ò–∑—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ –ø–ª–∞–Ω—à–µ—Ç–µ":
        bot.reply_to(message, "üìä –¢—ã –∏–∑—É—á–∞–µ—à—å –¥–∞–Ω–Ω—ã–µ. –£–∑–Ω–∞–ª –º–∞—Ä—à—Ä—É—Ç –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è –ö–æ—Ä–æ–Ω—ã –∏ —Å–ª–∞–±—ã–µ –º–µ—Å—Ç–∞ —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.")

    elif choice == "–ù–∞–π—Ç–∏ —Å–µ–∫—Ä–µ—Ç–∞—Ä—è –∏ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä–∞—Ñ–∏–∫–µ –ö–æ—Ä–æ–Ω—ã":
        bot.reply_to(message, "üìÑ –°–µ–∫—Ä–µ—Ç–∞—Ä—å —Å–æ–æ–±—â–∏–ª —Ç–µ–±–µ —Ç–æ—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ö–æ—Ä–æ–Ω—ã. –û–Ω –±—É–¥–µ—Ç –æ–¥–∏–Ω –≤ 14:00.")

    elif choice == "–ü—Ä–æ–Ω–∏–∫–Ω—É—Ç—å –≤ —Å–µ—Ä–≤–µ—Ä–Ω—É—é –∫–æ–º–Ω–∞—Ç—É":
        bot.send_message(message.chat.id, "üîí –¢—ã –ø—Ä–∏–±–ª–∏–∂–∞–µ—à—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π. –ù–∞ –¥–≤–µ—Ä–∏ –∫–æ–¥–æ–≤—ã–π –∑–∞–º–æ–∫.")
        bot.send_message(message.chat.id, "–ü–æ–ø—Ä–æ–±—É–µ—à—å –≤–∑–ª–æ–º–∞—Ç—å?")
        user_states[user_id] = STATES["server_room_choice"]
        return

    elif choice == "–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É —ç—Ç–∞–∂—É –Ω–∞–ø—Ä—è–º—É—é":
        final_corona_dialog(message)
        return

    else:
        bot.reply_to(message, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.")
        return

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_keyboard([
        "–ò–∑—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ –ø–ª–∞–Ω—à–µ—Ç–µ",
        "–ù–∞–π—Ç–∏ —Å–µ–∫—Ä–µ—Ç–∞—Ä—è –∏ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä–∞—Ñ–∏–∫–µ –ö–æ—Ä–æ–Ω—ã",
        "–ü—Ä–æ–Ω–∏–∫–Ω—É—Ç—å –≤ —Å–µ—Ä–≤–µ—Ä–Ω—É—é –∫–æ–º–Ω–∞—Ç—É",
        "–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É —ç—Ç–∞–∂—É –Ω–∞–ø—Ä—è–º—É—é"
    ]))


# –°–µ—Ä–≤–µ—Ä–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞
@bot.message_handler(func=lambda message: user_states.get(message.from_user.id) == STATES["server_room_choice"])
def server_room_choice(message):
    user_id = message.from_user.id
    choice = message.text.lower()

    if "–¥–∞" in choice or "–≤–∑–ª–æ–º" in choice:
        bot.reply_to(message, "üîì –¢—ã —É—Å–ø–µ—à–Ω–æ –≤–∑–ª–æ–º–∞–ª —Å–∏—Å—Ç–µ–º—É. –û—Ç–∫–ª—é—á–∏–ª –∫–∞–º–µ—Ä—ã –∏ –ø–æ–ª—É—á–∏–ª –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø.")
        bot.reply_to(message, "–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –±–µ—Å–ø—Ä–µ–ø—è—Ç—Å—Ç–≤–µ–Ω–Ω–æ –ø—Ä–æ–π—Ç–∏ –∫ –ö–æ—Ä–æ–Ω–µ.")
    else:
        bot.reply_to(message, "üö´ –¢—ã —Ä–µ—à–∏–ª –Ω–µ —Ä–∏—Å–∫–æ–≤–∞—Ç—å. –í–æ–∑–≤—Ä–∞—â–∞–µ—à—å—Å—è –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –º–∞—Ä—à—Ä—É—Ç—É.")

    final_corona_dialog(message)


# –î–∏–∞–ª–æ–≥ —Å –ö–æ—Ä–æ–Ω–æ–π
def final_corona_dialog(message):
    user_id = message.from_user.id
    user_states[user_id] = STATES["final_corona"]

    text = (
        "üë§ –¢—ã –≤—Ö–æ–¥–∏—à—å –≤ –∫–∞–±–∏–Ω–µ—Ç –ö–æ—Ä–æ–Ω—ã. –û–Ω –æ–¥–∏–Ω. –û–Ω –≥–æ–≤–æ—Ä–∏—Ç:\n\n"
        "¬´–Ø –∑–Ω–∞—é, –∫—Ç–æ —Ç—ã. –Ø –Ω–µ –≤—Ä–∞–≥. –Ø –±—ã–ª –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –≤–Ω—É—Ç—Ä—å, —á—Ç–æ–±—ã —Å–æ–±—Ä–∞—Ç—å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –ø—Ä–µ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞. –ú–æ–∏ –¥–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç —Å–ø–∞—Å—Ç–∏ –Ω–∞—Å –≤—Å–µ—Ö. –¢—ã –≥–æ—Ç–æ–≤ –º–Ω–µ –ø–æ–≤–µ—Ä–∏—Ç—å?¬ª\n\n"
        "–ö–∞–∫ —Ç—ã –ø–æ—Å—Ç—É–ø–∏—à—å?"
    )

    buttons = [
        "–£—Å—Ç—Ä–∞–Ω–∏—Ç—å –µ–≥–æ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ",
        "–í—ã—Å–ª—É—à–∞—Ç—å –µ–≥–æ",
        "–ó–∞–±—Ä–∞—Ç—å –µ–≥–æ —Å —Å–æ–±–æ–π",
        "–û—Å—Ç–∞–≤–∏—Ç—å –µ–≥–æ –≤ –ø–æ–∫–æ–µ"
    ]

    bot.send_message(message.chat.id, text, reply_markup=get_keyboard(buttons))


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞
@bot.message_handler(func=lambda message: user_states.get(message.from_user.id) == STATES["final_corona"])
def final_choice(message):
    user_id = message.from_user.id
    choice = message.text

    if choice == "–£—Å—Ç—Ä–∞–Ω–∏—Ç—å –µ–≥–æ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ":
        bot.send_message(message.chat.id, "üíÄ –¢—ã –≤—ã–ø–æ–ª–Ω–∏–ª –ø—Ä–∏–∫–∞–∑. –ö–æ—Ä–æ–Ω–∞ –º—ë—Ä—Ç–≤. –¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞.\n\n–ù–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å —Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –≥–æ–≤–æ—Ä—è—Ç –æ —Ç–≤–æ—ë–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–∏...\n\n–¢—ã —Å—Ç–∞–ª —á–∞—Å—Ç—å—é –º–∞—à–∏–Ω—ã... –ø–æ–∫–∞ –æ–Ω–∞ –Ω–µ –æ–±—Ä–∞—Ç–∏–ª–∞—Å—å –∫ —Ç–µ–±–µ.")

    elif choice == "–í—ã—Å–ª—É—à–∞—Ç—å –µ–≥–æ":
        bot.send_message(message.chat.id, "‚öñÔ∏è –¢—ã –≤—ã—Å–ª—É—à–∞–ª –ö–æ—Ä–æ–Ω—É. –û–∫–∞–∑–∞–ª–æ—Å—å, –æ–Ω –±—ã–ª –Ω–∞—à —á–µ–ª–æ–≤–µ–∫. –û–Ω –¥–∞–ª —Ç–µ–±–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∏–∑–º–µ–Ω—ã —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞.\n\n–¢–µ–ø–µ—Ä—å —Ç—ã –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω—è—Ç—å —Ä–µ—à–µ–Ω–∏–µ‚Ä¶")

    elif choice == "–ó–∞–±—Ä–∞—Ç—å –µ–≥–æ —Å —Å–æ–±–æ–π":
        bot.send_message(message.chat.id, "‚úÖ –¢—ã –≤—ã–≤–µ–ª –ö–æ—Ä–æ–Ω—É. –û–Ω –¥–æ–∫–∞–∑–∞–ª —Å–≤–æ—é –Ω–µ–≤–∏–Ω–æ–≤–Ω–æ—Å—Ç—å. –¢–µ–ø–µ—Ä—å —Ç—ã –≥–µ—Ä–æ–π.\n\n–¢—ã –≤—ã–±—Ä–∞–ª –ø—É—Ç—å —Ä–∞–∑—É–º–∞. –ú–∏—Ä —Å—Ç–∞–ª –Ω–µ–º–Ω–æ–≥–æ –ª—É—á—à–µ.")

    elif choice == "–û—Å—Ç–∞–≤–∏—Ç—å –µ–≥–æ –≤ –ø–æ–∫–æ–µ":
        bot.send_message(message.chat.id, "üîç –¢—ã –æ—Å—Ç–∞–≤–∏–ª –ö–æ—Ä–æ–Ω—É –æ–¥–Ω–æ–≥–æ. –ü–æ—Ä–∞ –Ω–∞—á–∞—Ç—å —Å–≤–æ—ë —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ...\n\n–¢—ã –¥–æ–≤–µ—Ä–∏–ª —Ñ–∞–∫—Ç–∞–º –±–æ–ª—å—à–µ, —á–µ–º –ø—Ä–∏–∫–∞–∑–∞–º.")

    else:
        bot.reply_to(message, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.")
        return

    bot.send_message(message.chat.id, "üîö –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ!", reply_markup=types.ReplyKeyboardRemove())
    user_states[user_id] = STATES["end_game"]


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)
