import os
import telebot
from telebot import types
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

if not TOKEN:
    raise ValueError("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Ñ–∞–π–ª .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–∫–µ–Ω.")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}
user_inventory = {}

STATES = {
    "start": "start",
    "choose_entry_point": "choose_entry_point",
    "office_zone": "office_zone",
    "underground": "underground",
    "roof": "roof",
    "inside_building": "inside_building",
    "server_room_choice": "server_room_choice",
    "final_corona": "final_corona",
    "end_game": "end_game"
}

ITEMS = [
    "–ü–ª–∞–Ω—à–µ—Ç",
    "–ì–∞–∑–æ–≤–∞—è –∫–∞–ø—Å—É–ª–∞",
    "–ú–∞—Å–∫–∏—Ä–æ–≤–æ—á–Ω—ã–π –∫–æ—Å—Ç—é–º M3",
    "–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–ª–æ–Ω–µ—Ä",
    "–î—Ä–æ–Ω-–ø—Ä–∏–º–∞–Ω–∫–∞",
]

def get_keyboard(options):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for option in options:
        markup.add(types.KeyboardButton(option))
    return markup


@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    user_states[user_id] = STATES["start"]
    user_inventory[user_id] = ITEMS.copy()

    welcome_text = (
        "üëÅÔ∏è –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –ê–≥–µ–Ω—Ç –ù–æ–ª—å.\n\n"
        "–¢–≤–æ—è –º–∏—Å—Å–∏—è ‚Äî —É—Å—Ç—Ä–∞–Ω–∏—Ç—å –∏–ª–∏ –æ–±–µ–∑–≤—Ä–µ–¥–∏—Ç—å –æ–±—ä–µ–∫—Ç –ø–æ –∏–º–µ–Ω–∏ \"–ö–æ—Ä–æ–Ω–∞\"...\n\n"
        "üîç –í—ã–±–µ—Ä–∏ –ø—É—Ç—å –ø—Ä–æ–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è:"
    )
    keyboard = get_keyboard(["–ß–µ—Ä–µ–∑ –æ—Ñ–∏—Å–Ω—É—é –∑–æ–Ω—É", "–ß–µ—Ä–µ–∑ –ø–æ–¥–∑–µ–º–Ω—ã–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏", "–° –∫—Ä—ã—à–∏"])
    bot.send_message(message.chat.id, welcome_text, reply_markup=keyboard)


@bot.message_handler(func=lambda message: user_states.get(message.from_user.id) == STATES["start"])
def choose_entry_point(message):
    user_id = message.from_user.id
    choice = message.text

    if choice == "–ß–µ—Ä–µ–∑ –æ—Ñ–∏—Å–Ω—É—é –∑–æ–Ω—É":
        user_states[user_id] = STATES["office_zone"]
        text = "ü™™ –¢—ã –ø–æ–¥—Ö–æ–¥–∏—à—å –∫ –≥–ª–∞–≤–Ω–æ–º—É –≤—Ö–æ–¥—É. –û—Ö—Ä–∞–Ω–Ω–∏–∫ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç—ã. –ß—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å?"
        buttons = [
            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–ª–∞–Ω—à–µ—Ç –¥–ª—è —Ñ–∞–ª—å—à–∏–≤—ã—Ö –ø—Ä–∞–≤",
            "–í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–ª–æ–Ω–µ—Ä–æ–º",
            "–û—Ç–≤–ª–µ—á—å –≤–Ω–∏–º–∞–Ω–∏–µ –¥—Ä–æ–Ω–æ–º-–ø—Ä–∏–º–∞–Ω–∫–æ–π",
            "–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ"
        ]

    elif choice == "–ß–µ—Ä–µ–∑ –ø–æ–¥–∑–µ–º–Ω—ã–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏":
        user_states[user_id] = STATES["underground"]
        text = "üï≥Ô∏è –¢–µ–º–Ω–æ –∏ —É–∑–∫–æ. –ß—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å?"
        buttons = [
            "–í—Å–∫—Ä—ã—Ç—å —Ä–µ—à—ë—Ç–∫—É –∏ –ø—Ä–æ–Ω–∏–∫–Ω—É—Ç—å –≤–Ω—É—Ç—Ä—å",
            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –¥–∞—Ç—á–∏–∫–æ–≤",
            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–∞–∑, –µ—Å–ª–∏ —Ç–∞–º —Å—Ç–æ—Ä–æ–∂–µ–≤—ã–µ —Å–æ–±–∞–∫–∏",
            "–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ"
        ]

    elif choice == "–° –∫—Ä—ã—à–∏":
        user_states[user_id] = STATES["roof"]
        text = "ü¶Ö –ù–∞ –∫—Ä—ã—à–µ. –í–∏–¥–Ω–æ –≤–µ—Ä—Ç–æ–ª—ë—Ç–Ω—É—é –ø–ª–æ—â–∞–¥–∫—É. –ß—Ç–æ –¥–∞–ª—å—à–µ?"
        buttons = [
            "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫—Ä—ã—à—É —Å –ø–æ–º–æ—â—å—é –¥—Ä–æ–Ω–∞",
            "–í–∫–ª—é—á–∏—Ç—å –±–ª–æ–∫–∏—Ä–∞—Ç–æ—Ä —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏",
            "–°–ø—É—Å—Ç–∏—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É—é –Ω–∞ –≤–µ—Ä—ë–≤–∫–µ",
            "–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ"
        ]

    else:
        bot.reply_to(message, "‚ùå –í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        return

    bot.send_message(message.chat.id, text, reply_markup=get_keyboard(buttons))


@bot.message_handler(func=lambda m: user_states.get(m.from_user.id) == STATES["underground"])
def underground_choice(message):
    uid = message.from_user.id
    choice = message.text

    if choice == "–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ":
        start(message)
    else:
        bot.reply_to(message, f"üîç –í—ã –≤—ã–±—Ä–∞–ª–∏: {choice}. (–∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Å—Ü–µ–Ω—ã)")


@bot.message_handler(func=lambda m: user_states.get(m.from_user.id) == STATES["office_zone"])
def office_zone_choice(message):
    uid = message.from_user.id
    choice = message.text

    if choice == "–í–µ—Ä–Ω—É—Ç—å—Å—è –æ–±—Ä–∞—Ç–Ω–æ":
        start(message)
        return

    known_choices = {
        "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–ª–∞–Ω—à–µ—Ç –¥–ª—è —Ñ–∞–ª—å—à–∏–≤—ã—Ö –ø—Ä–∞–≤": "‚úÖ –¢—ã –≤–æ—à—ë–ª –≤–Ω—É—Ç—Ä—å —Å —Ñ–∞–ª—å—à–∏–≤—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏.",
        "–í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–ª–æ–Ω–µ—Ä–æ–º": "‚úÖ –¢—ã –ø—Ä–æ—à—ë–ª –±–ª–∞–≥–æ–¥–∞—Ä—è –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–ª–æ–Ω–µ—Ä—É.",
        "–û—Ç–≤–ª–µ—á—å –≤–Ω–∏–º–∞–Ω–∏–µ –¥—Ä–æ–Ω–æ–º-–ø—Ä–∏–º–∞–Ω–∫–æ–π": "‚úÖ –î—Ä–æ–Ω —Å—Ä–∞–±–æ—Ç–∞–ª. –ü—É—Ç—å —Å–≤–æ–±–æ–¥–µ–Ω."
    }

    if choice in known_choices:
        bot.reply_to(message, known_choices[choice])
        user_states[uid] = STATES["inside_building"]
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_keyboard([
            "–ò–∑—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ –ø–ª–∞–Ω—à–µ—Ç–µ",
            "–ù–∞–π—Ç–∏ —Å–µ–∫—Ä–µ—Ç–∞—Ä—è –∏ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä–∞—Ñ–∏–∫–µ –ö–æ—Ä–æ–Ω—ã",
            "–ü—Ä–æ–Ω–∏–∫–Ω—É—Ç—å –≤ —Å–µ—Ä–≤–µ—Ä–Ω—É—é –∫–æ–º–Ω–∞—Ç—É",
            "–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É —ç—Ç–∞–∂—É –Ω–∞–ø—Ä—è–º—É—é"
        ]))
    else:
        bot.reply_to(message, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.")


@bot.message_handler(func=lambda m: user_states.get(m.from_user.id) == STATES["inside_building"])
def inside_building_choice(message):
    uid = message.from_user.id
    choice = message.text

    if choice == "–ò–∑—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ –ø–ª–∞–Ω—à–µ—Ç–µ":
        bot.reply_to(message, "üìä –¢—ã –∏–∑—É—á–∞–µ—à—å –º–∞—Ä—à—Ä—É—Ç –ö–æ—Ä–æ–Ω—ã.")
    elif choice == "–ù–∞–π—Ç–∏ —Å–µ–∫—Ä–µ—Ç–∞—Ä—è –∏ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä–∞—Ñ–∏–∫–µ –ö–æ—Ä–æ–Ω—ã":
        bot.reply_to(message, "üìÑ –°–µ–∫—Ä–µ—Ç–∞—Ä—å –¥–∞–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.")
    elif choice == "–ü—Ä–æ–Ω–∏–∫–Ω—É—Ç—å –≤ —Å–µ—Ä–≤–µ—Ä–Ω—É—é –∫–æ–º–Ω–∞—Ç—É":
        bot.send_message(message.chat.id, "üîí –£ –¥–≤–µ—Ä–∏ –∫–æ–¥. –í–∑–ª–æ–º–∞—Ç—å?")
        user_states[uid] = STATES["server_room_choice"]
    elif choice == "–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É —ç—Ç–∞–∂—É –Ω–∞–ø—Ä—è–º—É—é":
        final_corona_dialog(message)
    else:
        bot.reply_to(message, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.")


@bot.message_handler(func=lambda m: user_states.get(m.from_user.id) == STATES["server_room_choice"])
def server_room_choice(message):
    uid = message.from_user.id
    choice = message.text.lower()

    if "–¥–∞" in choice or "–≤–∑–ª–æ–º" in choice:
        bot.reply_to(message, "üîì –í–∑–ª–æ–º —É—Å–ø–µ—à–µ–Ω. –ö–∞–º–µ—Ä—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã.")
    else:
        bot.reply_to(message, "üö´ –†–µ—à–∏–ª –Ω–µ —Ä–∏—Å–∫–æ–≤–∞—Ç—å.")

    final_corona_dialog(message)


def final_corona_dialog(message):
    uid = message.from_user.id
    user_states[uid] = STATES["final_corona"]

    text = (
        "üë§ –í –∫–∞–±–∏–Ω–µ—Ç–µ –ö–æ—Ä–æ–Ω—ã. –û–Ω –≥–æ–≤–æ—Ä–∏—Ç:\n"
        "¬´–Ø –Ω–µ –≤—Ä–∞–≥. –Ø –≤–Ω–µ–¥—Ä—ë–Ω–Ω—ã–π –∞–≥–µ–Ω—Ç. –î–æ–≤–µ—Ä—å—Å—è –º–Ω–µ?¬ª"
    )

    bot.send_message(message.chat.id, text, reply_markup=get_keyboard([
        "–£—Å—Ç—Ä–∞–Ω–∏—Ç—å –µ–≥–æ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ",
        "–í—ã—Å–ª—É—à–∞—Ç—å –µ–≥–æ",
        "–ó–∞–±—Ä–∞—Ç—å –µ–≥–æ —Å —Å–æ–±–æ–π",
        "–û—Å—Ç–∞–≤–∏—Ç—å –µ–≥–æ –≤ –ø–æ–∫–æ–µ"
    ]))


@bot.message_handler(func=lambda m: user_states.get(m.from_user.id) == STATES["final_corona"])
def final_choice(message):
    uid = message.from_user.id
    choice = message.text

    endings = {
        "–£—Å—Ç—Ä–∞–Ω–∏—Ç—å –µ–≥–æ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ": "üíÄ –ö–æ—Ä–æ–Ω–∞ –º—ë—Ä—Ç–≤. –ù–æ —Ç—ã ‚Äî —Å–ª–µ–¥—É—é—â–∏–π.",
        "–í—ã—Å–ª—É—à–∞—Ç—å –µ–≥–æ": "‚öñÔ∏è –¢—ã –ø–æ–ª—É—á–∏–ª –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞. –ú–∏—Å—Å–∏—è —É—Å–ª–æ–∂–Ω–∏–ª–∞—Å—å.",
        "–ó–∞–±—Ä–∞—Ç—å –µ–≥–æ —Å —Å–æ–±–æ–π": "‚úÖ –í—ã —É—à–ª–∏ –≤–º–µ—Å—Ç–µ. –ò—Å—Ç–∏–Ω–∞ –≤–æ—Å—Ç–æ—Ä–∂–µ—Å—Ç–≤–æ–≤–∞–ª–∞.",
        "–û—Å—Ç–∞–≤–∏—Ç—å –µ–≥–æ –≤ –ø–æ–∫–æ–µ": "üîç –¢—ã —É—à—ë–ª –æ–¥–∏–Ω. –û—Ç–≤–µ—Ç—ã –æ—Å—Ç–∞–ª–∏—Å—å –≤ –ø—Ä–æ—à–ª–æ–º."
    }

    if choice in endings:
        bot.send_message(message.chat.id, endings[choice])
        bot.send_message(message.chat.id, "üîö –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ!", reply_markup=types.ReplyKeyboardRemove())
        user_states[uid] = STATES["end_game"]
    else:
        bot.reply_to(message, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.")


# –°—Ç–∞—Ä—Ç –±–æ—Ç–∞
if __name__ == "__main__":
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    bot.polling(none_stop=True)
